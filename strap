#!/bin/sh -e

. scripts/lib.sh
. scripts/cc-pick.sh
. scripts/cc-target.sh

# Manage expectations!
case "$target_os" in
	linux) ;;
	macos)
		warn "warning: macOS is known to be a really BAD Unix implementation!"
		warn "         it is also currently totally untested - expect issues!" ;;
	unknown)
		warn "warning: build is not tested on your OS, so you may have issues..."
		warn "* let me know how it goes! *" ;;
	*)
		warn "heads up: this OS is yet to be tested, but should work in theory."
		warn "* let me know how you get on! *" ;;
esac

# TODO(conf-cc) should also get these from env, I spose
cflags="-O3 -Wall -Wno-parentheses -fpic"
ldflags="-O3 -fpic"
test_cflags=

if is_cmd cpoly-config; then
	cpoly_cflags="`cpoly-config`"
	cpoly_ldflags=-lcpoly
else
	warn "error: couldn't find libcpoly installation (libc compatibility layer)"
	warn "unless you're using an OS that doesn't exist yet, install this:"
	warn "  https://gitlab.com/mikesmiffy128/libcpoly"
	exit 1
fi

if echo "__attribute__((constructor)) void x(void) {}" | \
		$cc -c -x c -o /dev/null - 2>/dev/null; then
	do_tests=1
else
	warn "warning: compiler does not appear to like __attribute__((constructor))"
	warn "warning: automated tests will not be built, so don't break anything!"
	do_tests=0
fi

mkdir -p build/strap/bin build/strap/lib

# XXX could compile separate objects in parallel, I *guess*, but building hardly
# takes long anyway so not a high priority
# XXX could also reuse objects, that might be more worthwhile, idunno
$cc $cflags $extra_cflags $cpoly_cflags $ldflags $extra_ldflags -fpie $cpoly_ldflags \
-Icbits/include \
src/build.c \
cbits/src/errorstring.c \
cbits/src/errmsg.c \
cbits/src/iobuf.c \
-o build/strap/bin/build

$cc $cflags $extra_cflags $cpoly_cflags $ldflags $extra_ldflags -fpie $cpoly_ldflags \
-Icbits/include \
src/build-dep.c \
cbits/src/errorstring.c \
cbits/src/errmsg.c \
cbits/src/iobuf.c \
-o build/strap/bin/build-dep

$cc $cflags $extra_cflags $cpoly_cflags $ldflags $extra_ldflags -fpie $cpoly_ldflags \
-Icbits/include \
src/build-infile.c \
cbits/src/errorstring.c \
cbits/src/errmsg.c \
cbits/src/iobuf.c \
-o build/strap/bin/build-infile

$cc -shared $cflags $extra_cflags $cpoly_cflags $ldflags $extra_ldflags $cpoly_ldflags \
-Icbits/include \
src/libbuild.c \
-o build/strap/lib/libbuild.so

# vi: sw=4 ts=4 noet tw=80 cc=80
